"""
===== 吃了多少薯片 =====
买了一箱薯片，第一天吃掉了整箱的一半后又多吃了一包
第二天安照此方法吃掉剩下的一半后又多吃一包
每天如此，直到第9天吃完后发现只剩下一包薯片了
题目如下:
    整箱中有多少包薯片
"""


def D(i):
    if i >= 9:
        return 1
    else:
        return 2 * (D(i+1) + 1)


if __name__ == "__main__":
    print(f"一共吃了{D(0)}包薯片")


"""
思路解析与优化:
0. 第0天为D0, 此时的薯片数量为n
0-1. 第1天为D1, 此时剩下的薯片数量为D0-(D0/2+1)
0-2. 第2天为D2, 此时剩下的薯片为D1-(D1/2+1)
0-2. 因此, 第n天为Dn, 吃掉的薯片为Dn-1-(Dn-1/2+1)
1. 对表达式化简可以得到 Dn=2(Dn+1 + 1)
2. 此时我们可以进行递归, 递归的开始使n=0
3. 因为题目说到第九天吃完之后剩下1包，因此n=9, D9=2(D9+1 +1), 所以递归中当i>=9时结束
"""
