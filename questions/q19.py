"""
===== 递归-汉诺塔 =====
在世界中心贝拿勒斯（在印度北部）的圣庙里，一块黄铜板上插着三根宝石针。
印度教的主神梵天在创造世界的时候，在其中一根针上从下到上地穿好了由大到小的64片金片。
这就是所谓的汉诺塔。
不论白天黑夜，总有一个僧侣在按照下面的法则移动这些金片：一次只移动一片，不管在哪根针上，小片必须在大片上面。僧侣们预言，当所有的金片都从梵天穿好的那根针上移到另外一根针上时，世界就将在一声霹雳中消灭，而梵塔、庙宇和众生也都将同归于尽
题目如下:
    通过代码打印出每一次移动的步骤
"""


def hanoi(n, a, b, c):
    if n == 1:
        print(f"将{a}针的金片移动到{c}针")
    else:
        hanoi(n-1, a, c, b)
        print(f"将{a}针的金片移动到{c}针")
        hanoi(n-1, b, a, c)


if __name__ == "__main__":
    hanoi(5, "A", "B", "C")


"""
思路解析与优化:
0. 假设我们现在有64个金片在A针上, 那么我们需要先将上层的63个金片放到B针, 再把最下层的金片从A针移动到C针, 最后再把B针的63个金片放到C针
1. 可以发现无论有多少个金片，我们最基本的原理都是一致的，因此我们可以使用递归实现
2. 递归函数的参数我们可以设置为n, a, b, c. n代表金片数, a, b, c代表针的位置
3. 当金片数n为1时，直接从a位置的A针处移动到c位置的C针即可
"""
